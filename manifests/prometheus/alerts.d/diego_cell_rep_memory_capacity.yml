# Source: firehose-exporter
---
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/custom_rules?/-
  value:
    name: DiegoCellRepsMemoryCapacity
    rules:
      # Average amount of free memory across all cells over the last 5 minutes
      - record: rep_memory_capacity_pct:avg5m
        expr: >
          100 *
          sum(avg_over_time(firehose_value_metric_rep_capacity_remaining_memory{environment="((metrics_environment))"}[5m])) by (environment, bosh_job_name) /
          sum(avg_over_time(firehose_value_metric_rep_capacity_total_memory{environment="((metrics_environment))"}[5m])) by (environment, bosh_job_name)

      # Average amount of memory being used across all cells over the last minutes
      - record: rep_memory_used_pct:avg5m
        expr: 100 - rep_memory_capacity_pct:avg5m

      # The number of diego cells that have been deployed
      - record: diego_cells_deployed
        expr: count(firehose_value_metric_rep_capacity_total_memory) by (environment, bosh_job_name)

      # The percentage of the deployed cells being utilised.
      # Multiply average memory usage (in the interval 0..1)
      # by cell count to find how many cells worth of resources
      # we're using
      - record: diego_cell_capacity_used_pct:avg5m
        expr: diego_cells_deployed * (rep_memory_used_pct:avg5m/100)

      # As per ADR021 [1], we want to be roughly 30% over provisioned.
      # We can calculate the amount we need to meet that requirement
      # by multiplying the number of cells we're utilising by 1.5,
      # and raising it to the next whole number. Doing so treats the
      # amount of cells we're using right now as two thirds of the total,
      # ergo we're one third over-provisioned.
      #
      # [1] https://team-manual.cloud.service.gov.uk/architecture_decision_records/ADR021-cell-capacity-assignment-2/#decision
      - record: diego_cells_required
        expr: ceil(1.5 * diego_cell_capacity_used_pct:avg5m)

      - alert: DiegoCellRepsReachingTotalMemoryCapacity
        expr:  rep_memory_capacity_pct:avg5m < 35
        for: 2h
        labels:
          severity: warning
        annotations:
          summary: Reps low free memory capacity
          bosh_job_name: "{{ $labels.bosh_job_name }}"
          description: >
            Rep is reporting that the average uncommitted memory across all cells has reached {{ $value | printf "%.0f"}}% over the last 5 minutes.

            The threshold for this alert is under 35%

            We aim to have at least 33% of memory available on average so that we can we can suffer the loss of an AZ by rescheduling the workloads
            in the lost zone across the other two.

            Review whether we need to scale up the number of cells.
          url: https://team-manual.cloud.service.gov.uk/architecture_decision_records/ADR021-cell-capacity-assignment-2/#decision
