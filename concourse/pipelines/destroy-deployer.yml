---
resources:
  - name: paas-cf
    type: git
    source:
      uri: https://github.com/alphagov/paas-cf
      branch: {{branch_name}}

  - name: bucket-terraform-state
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: bucket.tfstate

  - name: vpc-terraform-state
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: vpc.tfstate

  - name: destroy-all-trigger
    type: semver-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      key: destroy-trigger

  - name: concourse-manifest
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      versioned_file: concourse.yml
      region_name: {{aws_region}}

  - name: concourse-terraform-state
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      versioned_file: concourse.tfstate
      region_name: {{aws_region}}

  - name: concourse-bosh-state
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      versioned_file: concourse-state.json
      region_name: {{aws_region}}

jobs:
  - name: destroy-concourse
    serial: true
    plan:
    - get: paas-cf
    - get: concourse-manifest
    - get: concourse-bosh-state
    - get: vpc-terraform-state
    - get: concourse-terraform-state

    - task: destroy-concourse
      timeout: 30m
      config:
        platform: linux
        image: docker:///governmentpaas/bosh-init
        inputs:
        - name: paas-cf
        - name: concourse-manifest
        - name: concourse-bosh-state
        outputs:
        - name: destroy-concourse
        run:
          path: sh
          args:
          - -e
          - -c
          - |
            cp -v concourse-bosh-state/concourse-state.json .
            [ "$(cat concourse-bosh-state/concourse-state.json)" = "{}" ] \
              && echo Concourse bosh state empty, assuming already destroyed \
              && exit 0
            echo -n "${private_ssh_key}" > id_rsa
            chmod 400 id_rsa
            ls -l id_rsa
            cp -v concourse-manifest/concourse.yml .
            export BOSH_INIT_LOG_LEVEL={{log_level}}
            bosh-init delete concourse.yml
            [ -f concourse-state.json ] \
              || cp paas-cf/concourse/init_files/bosh-init-state.json.tpl concourse-state.json
            rm concourse-manifest/concourse.yml
            rm id_rsa
            cp concourse-state.json destroy-concourse
      ensure:
        put: concourse-bosh-state
        params:
          file: destroy-concourse/concourse-state.json

    - task: vpc-terraform-outputs-to-sh
      config:
        platform: linux
        image: docker:///ruby#2.2.3-slim
        inputs:
        - name: paas-cf
        - name: vpc-terraform-state
        outputs:
        - name: vpc-terraform-outputs
        run:
          path: sh
          args:
          - -e
          - -c
          - |
            ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
            < vpc-terraform-state/vpc.tfstate \
            > vpc-terraform-outputs/tfvars.sh
            ls -l vpc-terraform-outputs/tfvars.sh
            cat vpc-terraform-outputs/tfvars.sh

    - task: destroy-concourse-terraform
      config:
        platform: linux
        image: docker:///governmentpaas/terraform
        inputs:
        - name: paas-cf
        - name: vpc-terraform-outputs
        - name: concourse-terraform-state
        outputs:
        - name: concourse-terraform-state-out
        params:
          AWS_DEFAULT_REGION: {{aws_region}}
          TF_VAR_env: {{deploy_env}}
        run:
          path: sh
          args:
          - -e
          - -c
          - |
            . vpc-terraform-outputs/tfvars.sh
            touch concourse.crt concourse.key
            terraform destroy -force \
              -var-file=paas-cf/terraform/{{aws_account}}.tfvars \
              -state=concourse-terraform-state/concourse.tfstate \
              -state-out=concourse-terraform-state-out/concourse.tfstate \
              paas-cf/terraform/concourse
      ensure:
        put: concourse-terraform-state
        params:
          file: concourse-terraform-state-out/concourse.tfstate

    - put: destroy-all-trigger
      params: {bump: patch}

  - name: destroy-vpc
    serial: true
    plan:
    - get: paas-cf
      passed: [destroy-concourse]
    - get: vpc-terraform-state
    - get: destroy-all-trigger
      trigger: true
      passed: [destroy-concourse]
    - task: tf-destroy-vpc
      config:
        platform: linux
        image: docker:///governmentpaas/terraform
        params:
            TF_VAR_env: {{deploy_env}}
            AWS_DEFAULT_REGION: {{aws_region}}
        inputs:
          - name: paas-cf
          - name: vpc-terraform-state
        outputs:
          - name: tf-destroy-vpc
        run:
          path: sh
          args:
          - -e
          - -c
          - |
            touch paas-cf/terraform/vpc/id_rsa.pub
            terraform destroy -force -var-file=paas-cf/terraform/{{aws_account}}.tfvars \
              -state=vpc-terraform-state/vpc.tfstate -state-out=tf-destroy-vpc/vpc.tfstate paas-cf/terraform/vpc
      ensure:
        put: vpc-terraform-state
        params:
          file: tf-destroy-vpc/vpc.tfstate

  - name: destroy-init-bucket
    serial: true
    plan:
      - get: paas-cf
        passed: [destroy-vpc]
      - get: bucket-terraform-state
      - get: destroy-all-trigger
        trigger: true
        passed: [destroy-vpc]
      - task: tf-destroy-init-bucket
        config:
          platform: linux
          image: docker:///governmentpaas/terraform
          params:
              TF_VAR_env: {{deploy_env}}
              AWS_DEFAULT_REGION: {{aws_region}}
          inputs:
            - name: paas-cf
            - name: bucket-terraform-state
          run:
            path: sh
            args:
            - -e
            - -c
            - |
              terraform destroy -force -var-file=paas-cf/terraform/{{aws_account}}.tfvars \
                -state=bucket-terraform-state/bucket.tfstate paas-cf/terraform/bucket
