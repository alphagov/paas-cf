---
resource_types:
- name: s3-iam
  type: docker-image
  source:
    repository: governmentpaas/s3-resource
    tag: 594eaa9f4d93b2ed32a7e5e1cdea5b380e2f6682

- name: semver-iam
  type: docker-image
  source:
    repository: governmentpaas/semver-resource
    tag: ecbdd201e122b44de99a40ac9f24407c1a43b9a2

resources:
  - name: paas-cf
    type: git
    source:
      uri: https://github.com/alphagov/paas-cf.git
      branch: ((branch_name))
      tag_filter: ((paas_cf_tag_filter))
      commit_verification_key_ids: ((gpg_ids))

  - name: cf-tfstate
    type: s3-iam
    source:
      bucket: ((state_bucket))
      versioned_file: cf.tfstate
      region_name: ((aws_region))

  - name: datadog-tfstate
    type: s3-iam
    source:
      bucket: ((state_bucket))
      versioned_file: datadog.tfstate
      region_name: eu-west-1

  - name: concourse-tfstate
    type: s3-iam
    source:
      bucket: ((state_bucket))
      versioned_file: concourse.tfstate
      region_name: ((aws_region))

  - name: vpc-tfstate
    type: s3-iam
    source:
      bucket: ((state_bucket))
      versioned_file: vpc.tfstate
      region_name: ((aws_region))

  - name: pipeline-trigger
    type: semver-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      key: ((pipeline_trigger_file))

  - name: bosh-secrets
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: bosh-secrets.yml

  - name: bosh-CA
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: bosh-CA.tar.gz

  - name: cf-secrets
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: cf-secrets.yml

  - name: cf-manifest
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: cf-manifest.yml

  - name: cf-certs
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: cf-certs.tar.gz

  - name: concourse-manifest
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: concourse-manifest.yml

  - name: deployed-healthcheck
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: healthcheck-deployed

jobs:
  - name: init
    serial: true
    plan:
      - get: paas-cf
      - get: concourse-manifest
      - task: self-update-pipeline
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/self-update-pipelines
              tag: 895cf6752c8ec64af05a3a735186b90acd3db65a
          inputs:
            - name: paas-cf
            - name: concourse-manifest
          params:
            DEPLOY_ENV: ((deploy_env))
            BRANCH: ((branch_name))
            AWS_ACCOUNT: ((aws_account))
            SELF_UPDATE_PIPELINE: ((self_update_pipeline))
            PIPELINES_TO_UPDATE: ((pipeline_name))
            ENABLE_DESTROY: ((enable_destroy))
            SKIP_AWS_CREDENTIAL_VALIDATION: true
          run:
            path: ./paas-cf/concourse/scripts/self-update-pipeline.sh
      - put: pipeline-trigger
        params: {bump: patch}

  - name: delete-deployment
    serial_groups: [ destroy ]
    serial: true
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['init']
            trigger: true
          - get: bosh-secrets
          - get: bosh-CA
          - get: paas-cf
          - get: cf-secrets
          - get: cf-manifest
          - get: datadog-tfstate

      - task: get-cf-cli-config
        file: paas-cf/concourse/tasks/get-cf-cli-config.yml

      - task: remove-healthcheck-db
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: healthchecks
          DB_NAME: healthcheck-db
          BOUND_APP: healthcheck

      - task: remove-billing-db
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: billing
          DB_NAME: billing-db
          BOUND_APP: paas-billing

      - task: datadog-TF-destroy
        file: paas-cf/concourse/tasks/terraform_destroy_datadog.yml
        params:
          TF_VAR_datadog_api_key: ((datadog_api_key))
          TF_VAR_datadog_app_key: ((datadog_app_key))
          TF_VAR_env: ((deploy_env))
          TF_VAR_aws_account: ((aws_account))
          ENABLE_DATADOG: ((enable_datadog))
        ensure:
          put: datadog-tfstate
          params:
            file: updated-datadog-tfstate/datadog.tfstate

      - task: delete-deployment
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli
              tag: 465642da06051a55630d39c899697b678f66a7f7
          inputs:
            - name: bosh-secrets
            - name: paas-cf
          outputs:
            - name: deployed-healthcheck
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./paas-cf/concourse/scripts/bosh_login.sh "((bosh_fqdn))" bosh-secrets/bosh-secrets.yml
                bosh -n delete deployment --force "((deploy_env))"
                echo "no" > deployed-healthcheck/healthcheck-deployed
        on_success:
          put: deployed-healthcheck
          params:
            file: deployed-healthcheck/healthcheck-deployed

  - name: terraform-destroy
    serial_groups: [ destroy ]
    serial: true
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['delete-deployment']
            trigger: true
          - get: paas-cf
            passed: ['delete-deployment']
          - get: cf-tfstate
          - get: concourse-tfstate
          - get: vpc-tfstate
          - get: cf-secrets
          - get: cf-certs

      - task: extract-terraform-variables
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ruby
              tag: 2.2-slim
          inputs:
            - name: paas-cf
            - name: cf-tfstate
            - name: concourse-tfstate
            - name: vpc-tfstate
            - name: cf-secrets
          outputs:
            - name: terraform-variables
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < cf-tfstate/cf.tfstate > terraform-variables/cf.tfvars.sh
                ls -l terraform-variables/cf.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < concourse-tfstate/concourse.tfstate > terraform-variables/concourse.tfvars.sh
                ls -l terraform-variables/concourse.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < vpc-tfstate/vpc.tfstate > terraform-variables/vpc.tfvars.sh
                ls -l terraform-variables/vpc.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_yaml.rb \
                < cf-secrets/cf-secrets.yml > terraform-variables/cf-secrets.tfvars.sh
                ls -l terraform-variables/cf-secrets.tfvars.sh

      - task: cf-terraform-destroy
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/terraform
              tag: 9cad30b5d5889a0b72173f39701d1620e24df82c
          inputs:
            - name: terraform-variables
            - name: paas-cf
            - name: cf-tfstate
            - name: cf-certs
          outputs:
            - name: updated-cf-tfstate
          params:
            TF_VAR_system_dns_zone_name: ((system_dns_zone_name))
            TF_VAR_apps_dns_zone_name: ((apps_dns_zone_name))
            AWS_DEFAULT_REGION: ((aws_region))
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                . terraform-variables/cf.tfvars.sh
                . terraform-variables/concourse.tfvars.sh
                . terraform-variables/vpc.tfvars.sh
                . terraform-variables/cf-secrets.tfvars.sh

                mkdir generated-certificates
                tar xzvf cf-certs/cf-certs.tar.gz -C generated-certificates

                cp cf-tfstate/cf.tfstate updated-cf-tfstate/cf.tfstate
                terraform init paas-cf/terraform/cloudfoundry
                terraform destroy -force -var env="((deploy_env))" -var-file="paas-cf/terraform/((aws_account)).tfvars" \
                  -state=updated-cf-tfstate/cf.tfstate paas-cf/terraform/cloudfoundry
        ensure:
          put: cf-tfstate
          params:
            file: updated-cf-tfstate/cf.tfstate
