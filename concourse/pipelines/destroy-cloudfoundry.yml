resources:
  - name: paas-cf
    type: git
    source:
      uri: https://github.com/alphagov/paas-cf.git
      branch: {{branch_name}}

  - name: cf-tfstate
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      versioned_file: cf.tfstate
      region_name: {{aws_region}}

  - name: concourse-tfstate
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      versioned_file: concourse.tfstate
      region_name: {{aws_region}}

  - name: vpc-tfstate
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      versioned_file: vpc.tfstate
      region_name: {{aws_region}}

  - name: pipeline-trigger
    type: semver-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      key: {{pipeline_trigger_file}}

  - name: bosh-secrets
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: bosh-secrets.yml

  - name: cf-secrets
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: cf-secrets.yml

  - name: concourse-manifest
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: concourse-manifest.yml

jobs:
  - name: init
    serial: true
    plan:
      - get: paas-cf
      - get: concourse-manifest
      - task: self-update-pipeline
        config:
          platform: linux
          image: docker:///keymon/fly-cli
          inputs:
            - name: paas-cf
            - name: concourse-manifest
          params:
            DEPLOY_ENV: {{deploy_env}}
            BRANCH: {{branch_name}}
            ENVIRONMENT_CLASS: {{environment_class}}
            SELF_UPDATE_PIPELINE: {{self_update_pipeline}}
          run:
            path: bash
            args:
              - -e
              - -c
              - |
                if [ "$SELF_UPDATE_PIPELINE" != "true" ]; then
                  echo "Self update pipeline is disabled (set SELF_UPDATE_PIPELINE=true to enable)"
                else
                  echo "Self update pipeline is enabled (set SELF_UPDATE_PIPELINE=false to disable)"

                  VAL_FROM_YAML=$(pwd)/paas-cf/concourse/scripts/val_from_yaml.rb

                  export CONCOURSE_ATC_PASSWORD=$($VAL_FROM_YAML jobs.concourse.properties.atc.basic_auth_password concourse-manifest/concourse-manifest.yml)

                  export PIPELINES_TO_UPDATE={{pipeline_name}}
                  ./paas-cf/concourse/scripts/pipelines-bosh-cloudfoundry.sh
                fi
      - put: pipeline-trigger
        params: {bump: patch}

  - name: delete-deployment
    serial_groups: [ destroy ]
    serial: true
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['init']
            trigger: true
          - get: bosh-secrets
          - get: paas-cf
      - task: delete-deployment
        config:
          platform: linux
          image: docker:///governmentpaas/bosh-cli
          inputs:
            - name: bosh-secrets
            - name: paas-cf
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./paas-cf/concourse/scripts/bosh_login.sh bosh-secrets/bosh-secrets.yml
                bosh -n delete deployment {{deploy_env}}

  - name: terraform-destroy
    serial_groups: [ destroy ]
    serial: true
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['delete-deployment']
            trigger: true
          - get: paas-cf
            passed: ['delete-deployment']
          - get: cf-tfstate
          - get: concourse-tfstate
          - get: vpc-tfstate
          - get: cf-secrets

      - task: extract-terraform-variables
        config:
          platform: linux
          image: docker:///ruby#2.2-slim
          inputs:
            - name: paas-cf
            - name: cf-tfstate
            - name: concourse-tfstate
            - name: vpc-tfstate
            - name: cf-secrets
          outputs:
            - name: terraform-variables
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < cf-tfstate/cf.tfstate > terraform-variables/cf.tfvars.sh
                ls -l terraform-variables/cf.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < concourse-tfstate/concourse.tfstate > terraform-variables/concourse.tfvars.sh
                ls -l terraform-variables/concourse.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < vpc-tfstate/vpc.tfstate > terraform-variables/vpc.tfvars.sh
                ls -l terraform-variables/vpc.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_yaml.rb \
                < cf-secrets/cf-secrets.yml > terraform-variables/cf-secrets.tfvars.sh
                ls -l terraform-variables/cf-secrets.tfvars.sh
      - task: cf-terraform-destroy
        config:
          platform: linux
          image: docker:///governmentpaas/terraform
          inputs:
            - name: terraform-variables
            - name: paas-cf
            - name: cf-tfstate
          outputs:
            - name: updated-cf-tfstate
          params:
            AWS_DEFAULT_REGION: {{aws_region}}
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                . terraform-variables/cf.tfvars.sh
                . terraform-variables/concourse.tfvars.sh
                . terraform-variables/vpc.tfvars.sh
                . terraform-variables/cf-secrets.tfvars.sh

                terraform destroy -force -var env={{deploy_env}} -var-file=paas-cf/terraform/{{aws_account}}.tfvars \
                  -state=cf-tfstate/cf.tfstate -state-out=updated-cf-tfstate/cf.tfstate paas-cf/terraform/cloudfoundry
        ensure:
          put: cf-tfstate
          params:
            file: updated-cf-tfstate/cf.tfstate
