---
resource_types:
- name: s3-iam
  type: docker-image
  source:
    repository: ghcr.io/alphagov/paas/s3-resource
    tag: 96b47010a10ca13b40bc604b49b4ab9158cfe2c7

- name: semver-iam
  type: docker-image
  source:
    repository: ghcr.io/alphagov/paas/semver-resource
    tag: f2a80c95481056aa57d837e3b14f0012b542fdb3

resources:
  - name: paas-cf
    type: git
    source:
      uri: https://github.com/alphagov/paas-cf.git
      branch: ((branch_name))
      tag_filter: ((paas_cf_tag_filter))
      commit_verification_keys: ((gpg_public_keys))

  - name: cf-tfstate
    type: s3-iam
    source:
      bucket: ((state_bucket))
      versioned_file: cf.tfstate
      region_name: ((aws_region))

  - name: concourse-tfstate
    type: s3-iam
    source:
      bucket: ((state_bucket))
      versioned_file: concourse.tfstate
      region_name: ((aws_region))

  - name: vpc-tfstate
    type: s3-iam
    source:
      bucket: ((state_bucket))
      versioned_file: vpc.tfstate
      region_name: ((aws_region))

  - name: pipeline-trigger
    type: semver-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      key: ((pipeline_trigger_file))

  - name: bosh-vars-store
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: bosh-vars-store.yml

  - name: bosh-ca-crt
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: bosh-CA.crt

  - name: cf-manifest
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: cf-manifest.yml

  - name: deployed-healthcheck
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: healthcheck-deployed

jobs:
  - name: init
    serial: true
    plan:
      - get: paas-cf
      - task: self-update-pipeline
        tags: [colocated-with-web]
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ghcr.io/alphagov/paas/self-update-pipelines
              tag: 8d6c556abd2d54f27c0fda934d00df8beafac1f8

          inputs:
            - name: paas-cf
          params:
            DEPLOY_ENV: ((deploy_env))
            BRANCH: ((branch_name))
            MAKEFILE_ENV_TARGET: ((makefile_env_target))
            AWS_DEFAULT_REGION: ((aws_region))
            SELF_UPDATE_PIPELINE: ((self_update_pipeline))
            PIPELINES_TO_UPDATE: ((pipeline_name))
            ENABLE_DESTROY: ((enable_destroy))
            SKIP_AWS_CREDENTIAL_VALIDATION: true
            NEW_ACCOUNT_EMAIL_ADDRESS: ((NEW_ACCOUNT_EMAIL_ADDRESS))
            CONCOURSE_WEB_PASSWORD: ((concourse_web_password))
          run:
            path: ./paas-cf/concourse/scripts/self-update-pipeline.sh
      - put: pipeline-trigger
        params: {bump: patch}

  - name: delete-deployment
    serial_groups: [ destroy ]
    serial: true
    plan:
      - in_parallel:
          - get: pipeline-trigger
            passed: ['init']
            trigger: true
          - get: bosh-vars-store
          - get: paas-cf
          - get: cf-manifest
          - get: bosh-ca-crt

      - task: get-cf-cli-config
        tags: [colocated-with-web]
        file: paas-cf/concourse/tasks/get-cf-cli-config.yml

      - task: remove-healthcheck-db
        tags: [colocated-with-web]
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: healthchecks
          DB_NAME: healthcheck-db
          BOUND_APPS: healthcheck

      - task: remove-billing-db
        tags: [colocated-with-web]
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: billing
          DB_NAME: billing-db
          BOUND_APPS: paas-billing-api paas-billing-collector

      - task: remove-accounts-db
        tags: [colocated-with-web]
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: billing
          DB_NAME: accounts-db
          BOUND_APPS: paas-accounts

      - task: delete-deployments
        tags: [colocated-with-web]
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ghcr.io/alphagov/paas/bosh-cli-v2
              tag: 8d6c556abd2d54f27c0fda934d00df8beafac1f8

          inputs:
            - name: bosh-vars-store
            - name: paas-cf
            - name: bosh-ca-crt
          params:
            BOSH_ENVIRONMENT: ((bosh_fqdn))
            BOSH_CA_CERT: bosh-ca-crt/bosh-CA.crt
          outputs:
            - name: deployed-healthcheck
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                VAL_FROM_YAML=$(pwd)/paas-cf/concourse/scripts/val_from_yaml.rb
                BOSH_CLIENT='admin'
                BOSH_CLIENT_SECRET=$($VAL_FROM_YAML admin_password bosh-vars-store/bosh-vars-store.yml)
                export BOSH_CLIENT
                export BOSH_CLIENT_SECRET

                bosh -n delete-deployment --force --deployment "((deploy_env))"
                bosh -n delete-deployment --force --deployment prometheus
                bosh -n delete-deployment --force --deployment app-autoscaler
                echo "no" > deployed-healthcheck/healthcheck-deployed
        on_success:
          put: deployed-healthcheck
          params:
            file: deployed-healthcheck/healthcheck-deployed

  - name: terraform-destroy
    serial_groups: [ destroy ]
    serial: true
    plan:
      - in_parallel:
          - get: pipeline-trigger
            passed: ['delete-deployment']
            trigger: true
          - get: paas-cf
            passed: ['delete-deployment']
          - get: cf-tfstate
          - get: concourse-tfstate
          - get: vpc-tfstate

      - task: extract-terraform-variables
        tags: [colocated-with-web]
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ghcr.io/alphagov/paas/ruby
              tag: 8d6c556abd2d54f27c0fda934d00df8beafac1f8
          inputs:
            - name: paas-cf
            - name: cf-tfstate
            - name: concourse-tfstate
            - name: vpc-tfstate
          outputs:
            - name: terraform-variables
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < cf-tfstate/cf.tfstate > terraform-variables/cf.tfvars.sh
                ls -l terraform-variables/cf.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < concourse-tfstate/concourse.tfstate > terraform-variables/concourse.tfvars.sh
                ls -l terraform-variables/concourse.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < vpc-tfstate/vpc.tfstate > terraform-variables/vpc.tfvars.sh
                ls -l terraform-variables/vpc.tfvars.sh

                cat <<EOF > terraform-variables/cf-secrets.tfvars.sh
                export TF_VAR_secrets_cf_db_master_password="((secrets_cf_db_master_password))"
                export TF_VAR_secrets_cdn_db_master_password="((secrets_cdn_db_master_password))"
                export TF_VAR_external_cc_database_password="((external_cc_database_password))"
                export TF_VAR_external_bbs_database_password="((external_bbs_database_password))"
                export TF_VAR_external_locket_database_password="((external_locket_database_password))"
                export TF_VAR_external_uaa_database_password="((external_uaa_database_password))"
                export TF_VAR_external_silk_controller_database_password="((external_silk_controller_database_password))"
                export TF_VAR_external_policy_server_database_password="((external_policy_server_database_password))"
                EOF

      - task: cf-terraform-destroy
        tags: [colocated-with-web]
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ghcr.io/alphagov/paas/terraform
              tag: 8d6c556abd2d54f27c0fda934d00df8beafac1f8

          inputs:
            - name: terraform-variables
            - name: paas-cf
            - name: cf-tfstate
          outputs:
            - name: updated-cf-tfstate
          params:
            TF_VAR_system_dns_zone_name: ((system_dns_zone_name))
            TF_VAR_apps_dns_zone_name: ((apps_dns_zone_name))
            TF_VAR_system_domain_cert_arn: ""
            TF_VAR_apps_domain_cert_arn: ""
            AWS_DEFAULT_REGION: ((aws_region))
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                . terraform-variables/cf.tfvars.sh
                . terraform-variables/concourse.tfvars.sh
                . terraform-variables/vpc.tfvars.sh
                . terraform-variables/cf-secrets.tfvars.sh

                cp cf-tfstate/cf.tfstate updated-cf-tfstate/cf.tfstate
                terraform init paas-cf/terraform/cloudfoundry
                terraform destroy -force -var env="((deploy_env))" \
                  -var-file="paas-cf/terraform/((aws_account)).tfvars" \
                  -var-file="paas-cf/terraform/cloudfoundry/((aws_account)).tfvars" \
                  -var-file="paas-cf/terraform/((aws_region)).tfvars" \
                  -state=updated-cf-tfstate/cf.tfstate paas-cf/terraform/cloudfoundry
        ensure:
          put: cf-tfstate
          params:
            file: updated-cf-tfstate/cf.tfstate
