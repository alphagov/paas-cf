---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: governmentpaas/cf-uaac
    tag: 47b25fd03f4dcaf8851ee859f5e8ec0b915cf8fc
inputs:
  - name: paas-cf
  - name: cf-manifest
outputs:
  - name: admin-creds
run:
  path: sh
  args:
    - -e
    - -c
    - |
      [ -z "${PREFIX}" ] && echo "You need to specify \$PREFIX" && exit 1
      if [ "${DISABLE_ADMIN_USER_CREATION:-}" = "true" ]; then
        echo "Temporary user creation is disabled (DISABLE_ADMIN_USER_CREATION=${DISABLE_ADMIN_USER_CREATION}). Skipping."
        echo "none" >admin-creds/username
        echo "none" >admin-creds/password
        exit 0
      fi

      SUFFIX=$(tr -cd '[:alpha:]0-9' < /dev/urandom | head -c10)
      PASSWORD=$(tr -cd '[:alpha:]0-9' < /dev/urandom | head -c32)
      NAME=${PREFIX}-${SUFFIX}

      VAL_FROM_YAML=$(pwd)/paas-cf/concourse/scripts/val_from_yaml.rb
      UAA_ENDPOINT=$($VAL_FROM_YAML instance_groups.api.jobs.cloud_controller_ng.properties.uaa.url cf-manifest/cf-manifest.yml)

      echo "Creating user ${NAME}"
      uaac target "${UAA_ENDPOINT}"
      uaac token client get admin -s "${UAA_ADMIN_CLIENT_PASS}"
      uaac user add "${NAME}" -p "${PASSWORD}" --emails ignored
      USERID=$(uaac user get "${NAME}" -a id | awk '{print $2}')
      echo "${NAME}" >admin-creds/username
      echo "${PASSWORD}" >admin-creds/password
      echo "UserID is ${USERID}"

      set +e
      add_member(){
        GID=$(uaac group get "${1}" -a id | awk '{print $2}')
        result=$(
          uaac curl \
            -k "/Groups/${GID}/members" \
            -XPOST \
            -H 'Content-Type: application/json' \
            -d "{\"origin\":\"uaa\",\"type\":\"USER\",\"value\":\"${2}\"}"
        )
        # Check that `uaac` output a 201 HTTP status code.
        # shellcheck disable=SC2181
        if [ $? = 0 ] && echo "${result}" | grep '^201'; then
          echo "${result}"
          echo "Added $2 to $1"
        else
          echo "${result}"
          exit 1
        fi
      }

      add_member cloud_controller.admin "${USERID}"
      add_member uaa.admin "${USERID}"
      add_member scim.read "${USERID}"
      add_member scim.write "${USERID}"
      add_member doppler.firehose "${USERID}"
      add_member network.admin "${USERID}"
