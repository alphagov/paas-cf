
---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: governmentpaas/cf-uaac
    tag: 895cf6752c8ec64af05a3a735186b90acd3db65a
inputs:
  - name: paas-cf
  - name: cf-secrets
  - name: cf-manifest
  - name: bosh-CA
outputs:
  - name: admin-creds
run:
  path: sh
  args:
    - -e
    - -c
    - |
      [ -z "${PREFIX}" ] && echo "You need to specify \$PREFIX" && exit 1
      if [ "${DISABLE_ADMIN_USER_CREATION:-}" = "true" ]; then
        echo "Temporary user creation is disabled (DISABLE_ADMIN_USER_CREATION=${DISABLE_ADMIN_USER_CREATION}). Skipping."
        echo "none" >admin-creds/username
        echo "none" >admin-creds/password
        exit 0
      fi
      ./paas-cf/concourse/scripts/import_bosh_ca.sh

      SUFFIX=$(tr -cd '[:alpha:]0-9' < /dev/urandom | head -c10)
      PASSWORD=$(tr -cd '[:alpha:]0-9' < /dev/urandom | head -c32)
      NAME=${PREFIX}-${SUFFIX}

      VAL_FROM_YAML=$(pwd)/paas-cf/concourse/scripts/val_from_yaml.rb
      UAA_ADMIN_CLIENT_PASS=$($VAL_FROM_YAML secrets.uaa_admin_client_secret cf-secrets/cf-secrets.yml)
      UAA_ENDPOINT=$($VAL_FROM_YAML properties.uaa.url cf-manifest/cf-manifest.yml)

      echo "Creating user ${NAME}"
      uaac target "${UAA_ENDPOINT}"
      uaac token client get admin -s "${UAA_ADMIN_CLIENT_PASS}"
      uaac user add "${NAME}" -p "${PASSWORD}" --emails ignored
      USERID=$(uaac user get "${NAME}" -a id | awk '{print $2}')
      echo "${NAME}" >admin-creds/username
      echo "${PASSWORD}" >admin-creds/password
      echo "UserID is ${USERID}"

      set +e
      add_member(){
        GID=$(uaac group get $1 -a id | awk '{print $2}')
        uaac curl -k "/Groups/${GID}/members" -XPOST -H'Content-Type: application/json' \
                  -d'{"origin":"uaa","type":"USER","value":"'${2}'"}'
        echo "May have added $2 to $1"
      }

      add_member cloud_controller.admin "${USERID}"
      add_member uaa.admin "${USERID}"
      add_member scim.read "${USERID}"
      add_member scim.write "${USERID}"
      add_member doppler.firehose "${USERID}"
